name: builder

on:
  workflow_call:
    inputs:
      variant:
        default: main
        required: true
        type: string

env:
  IMAGE_LOGO_URL: "https://avatars.githubusercontent.com/u/36515619?v=4"
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  IMAGE_NAME: "${{ github.event.repository.name }}"
  IMAGE_KEYWORDS: "bootc,fedora,ostree"
  IMAGE_DESC: "ChickenIQ's Custom Image"
  IMAGE_TAG: "${{ inputs.variant }}"

jobs:
  build:
    name: Build and push image
    runs-on: ubuntu-24.04
    steps:
      - name: Mount BTRFS for podman storage
        uses: ublue-os/container-storage-action@main

      - name: Prepare environment
        run: |
          echo "IMAGE_NAME=${IMAGE_NAME,,}" >> ${GITHUB_ENV}
          echo "IMAGE_REGISTRY=${IMAGE_REGISTRY,,}" >> ${GITHUB_ENV}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Get current date
        id: date
        run: echo "date=$(date -u +%Y\-%m\-%d\T%H\:%M\:%S\Z)" >> $GITHUB_OUTPUT

      - name: Image Metadata
        uses: docker/metadata-action@v5
        id: metadata
        with:
          sep-tags: " "
          sep-annotations: " "
          tags: |
            type=raw,value=${{ env.IMAGE_TAG }}
            type=raw,value=${{ env.IMAGE_TAG }}.{{date 'YYYYMMDD'}}
            type=raw,value={{date 'YYYYMMDD'}}
            type=sha,enable=${{ github.event_name == 'pull_request' }}
            type=ref,event=pr
          labels: |
            org.opencontainers.image.documentation=https://raw.githubusercontent.com/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}/refs/heads/main/README.md
            org.opencontainers.image.source=https://github.com/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}/blob/main/Containerfile
            org.opencontainers.image.url=https://github.com/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
            org.opencontainers.image.version=${{ env.IMAGE_TAG }}.{{date 'YYYYMMDD'}}
            org.opencontainers.image.created=${{ steps.date.outputs.date }}
            org.opencontainers.image.vendor=${{ github.repository_owner }}
            org.opencontainers.image.description=${{ env.IMAGE_DESC }}
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}/refs/heads/main/README.md
            io.artifacthub.package.keywords=${{ env.IMAGE_KEYWORDS }}
            io.artifacthub.package.logo-url=${{ env.IMAGE_LOGO_URL }}
            io.artifacthub.package.deprecated=false
            io.artifacthub.package.prerelease=false
            io.artifacthub.package.license=MIT
            containers.bootc=1

      - name: Build Image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        env:
          SECUREBOOT_KEY: ${{ secrets.SECUREBOOT_KEY }}
        with:
          image: ${{ env.IMAGE_NAME }}
          containerfiles: ./Containerfile
          tags: ${{ steps.metadata.outputs.tags }}
          build-args: VARIANT=${{ inputs.variant }}
          labels: ${{ steps.metadata.outputs.labels }}
          extra-args: --secret=id=secureboot,env=SECUREBOOT_KEY

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push To GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        with:
          image: ${{ env.IMAGE_NAME }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.9.0

      - name: Sign container image
        run: cosign sign -y --key env://COSIGN_KEY ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        env:
          COSIGN_EXPERIMENTAL: false
          TAGS: ${{ steps.push.outputs.digest }}
          COSIGN_KEY: ${{ secrets.COSIGN_KEY }}
